DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS booking CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name  VARCHAR(255)                            NOT NULL,
    user_email VARCHAR(512),
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (user_email)
);

CREATE UNIQUE INDEX IF NOT EXISTS users_index ON users (id);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    description  VARCHAR,
    requestor_id BIGINT,
    created      TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT fk_requests FOREIGN KEY (requestor_id) REFERENCES users (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS requests_index ON requests (id);

CREATE TABLE IF NOT EXISTS items
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    item_name       VARCHAR(255)                            NOT NULL,
    description     VARCHAR                                 NOT NULL,
    available       BOOLEAN                                 NOT NULL,
    owner_id        BIGINT,
    item_request_id BIGINT,
    CONSTRAINT pk_item PRIMARY KEY (id),
    CONSTRAINT fk_items_to_requests FOREIGN KEY (item_request_id) REFERENCES requests (id),
    CONSTRAINT fk_items_to_users FOREIGN KEY (owner_id) REFERENCES users (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS items_index ON items (id);

CREATE TABLE IF NOT EXISTS booking
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date   TIMESTAMP WITHOUT TIME ZONE,
    item_id    BIGINT                                  NOT NULL,
    booker_id  BIGINT                                  NOT NULL,
    status     VARCHAR,
    CONSTRAINT fk_booking_to_users FOREIGN KEY (booker_id) REFERENCES users (id),
    CONSTRAINT fk_booking_to_items FOREIGN KEY (item_id) REFERENCES items (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS booking_index ON booking (id);

CREATE TABLE IF NOT EXISTS comments
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    texts         VARCHAR                                 NOT NULL,
    item_id       BIGINT                                  NOT NULL,
    author_id     BIGINT                                  NOT NULL,
    creation_date VARCHAR                                 NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_to_items FOREIGN KEY (item_id) REFERENCES items (id),
    CONSTRAINT fk_comments_to_users FOREIGN KEY (author_id) REFERENCES users (id)
);

CREATE UNIQUE INDEX IF NOT EXISTS comments_index ON comments (id);